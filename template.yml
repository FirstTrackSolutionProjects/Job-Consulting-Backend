AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  AwsAccessKeyId:
    Type: String
  AwsRegion:
    Type: String
    Default: ap-south-1
  AwsSecretAccessKey:
    Type: String
  S3BucketName:
    Type: String
  S3BucketURL:
    Type: String
  EmailHost:
    Type: String
  EmailPort:
    Type: String
  ContactEmail:
    Type: String
  ContactEmailPassword:
    Type: String
  AdminEmail:
    Type: String
  EmailSecure:
    Type: String

Resources:
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${ApiGateway}
      RetentionInDays: 14

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AppFunction}
      RetentionInDays: 14

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      AccessLogSetting:
        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
        Format: |
          {
            "requestId": "$context.requestId",
            "ip": "$context.identity.sourceIp",
            "caller": "$context.identity.caller",
            "user": "$context.identity.user",
            "requestTime": "$context.requestTime",
            "httpMethod": "$context.httpMethod",
            "resourcePath": "$context.resourcePath",
            "status": "$context.status",
            "protocol": "$context.protocol",
            "responseLength": "$context.responseLength"
          }
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: false
          MetricsEnabled: true

  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Runtime: nodejs20.x
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          AWS_ACCESS_KEY_ID_: !Ref AwsAccessKeyId
          AWS_REGION_: !Ref AwsRegion
          AWS_SECRET_ACCESS_KEY_: !Ref AwsSecretAccessKey
          S3_BUCKET_NAME_: !Ref S3BucketName
          S3_BUCKET_URL: !Ref S3BucketURL
          CONTACT_EMAIL: !Ref ContactEmail
          CONTACT_EMAIL_PASSWORD: !Ref ContactEmailPassword
          ADMIN_EMAIL: !Ref AdminEmail
          EMAIL_HOST: !Ref EmailHost
          EMAIL_POST: !Ref EmailPort
          EMAIL_SECURE: !Ref EmailSecure
      Events:
        ProxyApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY

Outputs:
  AppFunctionArn:
    Description: Lambda Function ARN
    Value:
      Fn::GetAtt:
        - AppFunction
        - Arn

  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/api/
